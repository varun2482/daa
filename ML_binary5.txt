import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('emails.csv')
df

# Display basic information about the dataset
df.shape
df.size
df.head()
df.tail()
df.describe()
df.dtypes
df

# Separate features and target variable
X = df.drop(["Email No.", "Prediction"], axis=1)
X
Y = df["Prediction"]
Y

# Plot distribution of target variable
sns.countplot(x=Y)
Y.value_counts()

# Scale features using MinMaxScaler
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
X_Scale = scaler.fit_transform(X)
X_Scale

# Split dataset into train and test sets
from sklearn.model_selection import train_test_split
X_train, X_test, Y_train, Y_Test = train_test_split(X_Scale, Y, test_size=0.46, random_state=46)
X_train.shape
X_Scale.shape
X_test.shape
Y_train.shape

# Initialize and train K-Nearest Neighbors model
from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier()
knn.fit(X_train, Y_train)

# Make predictions
Y_pred = knn.predict(X_test)
Y_pred

# Evaluate model performance
from sklearn.metrics import accuracy_score, classification_report, ConfusionMatrixDisplay
ConfusionMatrixDisplay.from_predictions(Y_Test, Y_pred)
accuracy_score(Y_Test, Y_pred)
print(classification_report(Y_Test, Y_pred))
